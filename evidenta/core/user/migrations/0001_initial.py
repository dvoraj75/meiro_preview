# Generated by Django 5.0.7 on 2024-07-24 12:16

import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models

import evidenta.core.user.models.user


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Role",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "name",
                    models.CharField(
                        choices=[
                            ("guest", "Guest"),
                            ("client", "Client"),
                            ("accountant", "Accountant"),
                            ("supervisor", "Supervisor"),
                            ("admin", "Admin"),
                        ],
                        unique=True,
                        max_length=32
                    ),
                ),
                ("permissions", models.ManyToManyField(blank=True, to="auth.permission")),
            ],
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                ("last_login", models.DateTimeField(blank=True, null=True, verbose_name="last login")),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. "
                        "Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                ("date_joined", models.DateTimeField(default=django.utils.timezone.now, verbose_name="date joined")),
                (
                    "username",
                    models.CharField(
                        max_length=150,
                        unique=True,
                        validators=[django.contrib.auth.validators.UnicodeUsernameValidator()],
                    ),
                ),
                ("title", models.CharField(blank=True, default="", max_length=10)),
                ("first_name", models.CharField(max_length=150)),
                ("last_name", models.CharField(max_length=150)),
                (
                    "email",
                    models.EmailField(
                        max_length=254,
                        unique=True,
                        validators=[django.core.validators.EmailValidator(message="Invalid e-mail address format.")],
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=16,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Invalid phone number format.", regex="^\\+?1?\\d{9,15}$"
                            )
                        ],
                    ),
                ),
                (
                    "gender",
                    models.PositiveSmallIntegerField(blank=True, choices=[(1, "Male"), (2, "Female")], null=True),
                ),
                ("birthday", models.DateField(blank=True, null=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. "
                        "A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
                ("role", models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to="user.role")),
            ],
            options={
                "db_table": "user",
                "ordering": ["pk"],
                "permissions": [("assign_company_user", "Can assign company to user")],
            },
            managers=[
                ("objects", evidenta.core.user.models.user.CustomUserManager()),
            ],
        ),
    ]
